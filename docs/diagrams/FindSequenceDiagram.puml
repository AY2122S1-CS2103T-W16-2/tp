@startuml
!include style.puml
skinparam Padding 0

box Logic LOGIC_COLOR_T1
participant ":FindIngredientCommandParser" as FindIngredientCommandParser LOGIC_COLOR
participant "p:PredicateCollection" as PredicateCollection LOGIC_COLOR
participant ":StringContainsKeywordsPredicate" as StringContainsKeywordsPredicate LOGIC_COLOR
participant ":ValueWithinRangePredicate" as ValueWithinRangePredicate LOGIC_COLOR
participant "c:FindIngredientCommand" as FindIngredientCommand LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box
[-> FindIngredientCommandParser : parse(args)
activate FindIngredientCommandParser

box Model MODEL_COLOR_T1
participant ":ModelManager" as ModelManager MODEL_COLOR
end box

create PredicateCollection
FindIngredientCommandParser -> PredicateCollection
activate PredicateCollection

PredicateCollection --> FindIngredientCommandParser
deactivate PredicateCollection

FindIngredientCommandParser -> PredicateCollection : addStringContainsKeywordsPredicate()
activate PredicateCollection

create StringContainsKeywordsPredicate
PredicateCollection -> StringContainsKeywordsPredicate
activate StringContainsKeywordsPredicate

StringContainsKeywordsPredicate --> PredicateCollection
deactivate StringContainsKeywordsPredicate

PredicateCollection --> FindIngredientCommandParser
deactivate PredicateCollection

FindIngredientCommandParser -> PredicateCollection : addValueWithinRangePredicate()
activate PredicateCollection

create ValueWithinRangePredicate
PredicateCollection -> ValueWithinRangePredicate
activate ValueWithinRangePredicate

ValueWithinRangePredicate --> PredicateCollection
deactivate ValueWithinRangePredicate

PredicateCollection --> FindIngredientCommandParser
deactivate PredicateCollection

create FindIngredientCommand
FindIngredientCommandParser -> FindIngredientCommand
activate FindIngredientCommand

FindIngredientCommand --> FindIngredientCommandParser
deactivate FindIngredientCommand

[<--FindIngredientCommandParser : c
deactivate FindIngredientCommandParser

[-> FindIngredientCommand : execute()
activate FindIngredientCommand

FindIngredientCommand -> ModelManager : updateFilteredIngredientList(p)
activate ModelManager

ModelManager --> FindIngredientCommand
deactivate ModelManager
|||
create CommandResult
FindIngredientCommand -> CommandResult
activate CommandResult

CommandResult --> FindIngredientCommand
deactivate CommandResult

[<--FindIngredientCommand : result
deactivate FindIngredientCommand

@enduml
